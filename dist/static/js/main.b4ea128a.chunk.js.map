{"version":3,"sources":["components/Notification/Notification.styles.js","components/Notification/Notification.js","components/Notification/index.js","components/Kitty/Kitty.styles.js","components/Kitty/Kitty.js","api/kitties.js","constants/api.js","pages/Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Locator","styled","div","isDisplayed","Notification","content","px","py","alignY","space","size","as","role","aria-label","color","Context","createContext","NotificationProvider","children","useState","isShown","notification","setNotification","useEffect","timeout","setTimeout","clearTimeout","Provider","value","showNotification","useNotification","useContext","KittyPhoto","img","Kitty","kitty","onToggleFav","isFaved","tabIndex","image","id","src","url","alt","p","width","onClick","onKeyDown","event","key","kittiesApi","axios","create","baseURL","headers","addKitty","data","a","FormData","append","post","getKitties","get","getFavKitties","favKitty","imageId","image_id","unfavKitty","favId","delete","FavKitties","queries","useQueryClient","useMutation","onSuccess","invalidateQueries","doUnfavKitty","mutateAsync","isDeleting","isLoading","onKittyUnfaved","useQuery","kitties","error","length","aria-hidden","columns","map","AllKitties","doFavKitty","isAdding","onKittyFaved","refetchOnWindowFocus","refetch","Main","doAddKitty","kittyForm","useForm","defaultValues","name","age","modal","setModal","onSubmitKitten","handleEscape","window","addEventListener","removeEventListener","active","render","onBackgroundClick","bordered","Header","Body","onSubmit","handleSubmit","htmlFor","type","ref","register","required","errors","message","file","weight","align","appName","pb","variant","queryClient","QueryClient","App","QueryClientProvider","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4ea128a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Locator = styled.div`\n  top: 4rem;\n  right: 1rem;\n  width: 20rem;\n  position: fixed;\n  z-index: 30000;\n\n  transition: all 250ms ease-in-out;\n\n  transform: translateX(150%);\n\n  ${({ isDisplayed }) => (isDisplayed ? `transform: translateX(0%);` : null)}\n`;\n","import { Cell, Spacing, Inline, Text, Column } from \"@cornershop/cornponents\";\n\nimport * as st from \"./Notification.styles\";\n\nconst Notification = ({ content, isDisplayed }) => (\n  <st.Locator isDisplayed={isDisplayed}>\n    <Cell>\n      <Spacing px=\"gutter\" py=\"small\">\n        <Inline alignY=\"center\" space=\"small\">\n          <Column>\n            <Text size=\"4xl\" as=\"span\">\n              <span role=\"img\" aria-label=\"Alert\">\n                🚨\n              </span>\n            </Text>\n          </Column>\n          <Column>\n            <Text size=\"lg\" color=\"black\" role={isDisplayed ? \"alert\" : \"\"}>\n              {content}\n            </Text>\n          </Column>\n        </Inline>\n      </Spacing>\n    </Cell>\n  </st.Locator>\n);\n\nexport default Notification;\n","import { useState, createContext, useContext, useEffect } from \"react\";\n\nimport Notification from \"./Notification\";\n\nconst Context = createContext({});\n\nconst NotificationProvider = ({ children = null }) => {\n  const [notification, setNotification] = useState({\n    isShown: false,\n    content: null,\n  });\n\n  const showNotification = (content) => {\n    setNotification({\n      content,\n      isShown: true,\n    });\n  };\n\n  useEffect(() => {\n    let timeout;\n    if (notification.isShown) {\n      timeout = setTimeout(() => {\n        setNotification({\n          ...notification,\n          isShown: false,\n        });\n      }, 3000);\n    }\n\n    return () => {\n      if (timeout) clearTimeout(timeout);\n    };\n  }, [notification, setNotification]);\n\n  return (\n    <Context.Provider\n      value={{\n        showNotification,\n      }}\n    >\n      <Notification\n        content={notification.content}\n        isDisplayed={notification.isShown}\n      />\n      {children}\n    </Context.Provider>\n  );\n};\n\nconst useNotification = () => useContext(Context);\n\nexport { useNotification, NotificationProvider };\n","import styled from \"styled-components\";\n\nexport const KittyPhoto = styled.img`\n  width: 100%;\n  height: 8rem;\n  object-fit: cover;\n`;\n","import { Cell, Text, Inline, Spacing, Column } from \"@cornershop/cornponents\";\n\nimport * as st from \"./Kitty.styles\";\n\nconst Kitty = ({ kitty, onToggleFav, isFaved }) => (\n  <Cell\n    tabIndex=\"0\"\n    aria-label={`This is a kitty with this identifier: ${\n      kitty.image?.id ?? kitty.id\n    }`}\n  >\n    <st.KittyPhoto\n      src={kitty.image?.url ?? kitty.url}\n      alt=\"a very beautiful cat\"\n    />\n    <Spacing p=\"small\">\n      <Inline>\n        <Column width=\"fluid\">\n          <Text>Kitty</Text>\n        </Column>\n        <Column width=\"content\">\n          <Text\n            id=\"fav-container\"\n            onClick={onToggleFav}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\") {\n                onToggleFav();\n              }\n            }}\n            role=\"button\"\n            tabIndex=\"0\"\n            aria-label={\n              isFaved ? \"Remove kitty from favorites\" : \"Add kitty to favorites\"\n            }\n          >\n            <span role=\"img\" aria-label=\"Star\">\n              ⭐️\n            </span>\n          </Text>\n        </Column>\n      </Inline>\n      <Text size=\"xs\" color=\"black300\">\n        {kitty.image?.id ?? kitty.id}\n      </Text>\n    </Spacing>\n  </Cell>\n);\n\nexport default Kitty;\n","import axios from \"axios\";\n\nimport { API_KEY } from \"../constants/api\";\n\nconst kittiesApi = axios.create({\n  baseURL: \"https://api.thecatapi.com/v1\",\n  headers: {\n    \"x-api-key\": API_KEY,\n  },\n});\nexport const addKitty = async (data) => {\n  const sendData = new FormData();\n  sendData.append(\"file\", data.image);\n  return (await kittiesApi.post(\"/images/upload\"),\n  sendData,\n  {\n    headers: { \"Content-Type\": \"multipart/form-data\" },\n  }).data;\n};\nexport const getKitties = async () =>\n  (await kittiesApi.get(\"/images/search\")).data;\nexport const getFavKitties = async () =>\n  (await kittiesApi.get(\"/favourites\")).data;\nexport const favKitty = async (imageId) =>\n  (await kittiesApi.post(\"/favourites\", { image_id: imageId })).data;\nexport const unfavKitty = async (favId) =>\n  (await kittiesApi.delete(`/favourites/${favId}`)).data;\n","export const API_KEY = \"91d4d62a-9541-4704-a5b9-1c53fd698a4d\";\n","import { useState, Fragment, useEffect } from \"react\";\nimport {\n  Header,\n  Modal,\n  Card,\n  Spacing,\n  Cell,\n  Loading,\n  Text,\n  Stack,\n  Tiles,\n  Inline,\n  Column,\n  Button,\n  Input,\n} from \"@cornershop/cornponents\";\nimport FocusTrap from \"focus-trap-react\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\n\nimport { useNotification } from \"../../components//Notification\";\n\nimport Kitty from \"../../components/Kitty\";\n\nimport {\n  getFavKitties,\n  getKitties,\n  favKitty,\n  addKitty,\n  unfavKitty,\n} from \"../../api/kitties\";\n\nconst FavKitties = () => {\n  const queries = useQueryClient();\n  const { showNotification } = useNotification();\n  const { mutateAsync: doUnfavKitty, isLoading: isDeleting } = useMutation(\n    (id) => unfavKitty(id),\n    {\n      onSuccess: () => {\n        queries.invalidateQueries([\"fav-kitties\"]);\n      },\n    }\n  );\n\n  const onKittyUnfaved = async (id) => {\n    await doUnfavKitty(id);\n    showNotification(\"Cat was removed from favorites\");\n  };\n\n  const { data: kitties = [], isLoading, error } = useQuery(\n    [\"fav-kitties\"],\n    () => getFavKitties()\n  );\n\n  if (isLoading) {\n    return (\n      <Spacing py=\"large\">\n        <Loading size=\"large\" />\n      </Spacing>\n    );\n  }\n\n  if (error) {\n    return (\n      <>\n        <Text>Bad Kitty!!!!</Text>\n        <Text>{error}</Text>\n      </>\n    );\n  }\n\n  if (kitties.length <= 0) {\n    return (\n      <Text color=\"black400\" tabIndex=\"0\">\n        You do not have any favorite kitties yet\n        <span role=\"img\" aria-label=\"Sad\" aria-hidden>\n          😿\n        </span>\n      </Text>\n    );\n  }\n\n  return (\n    <Stack>\n      {isDeleting && (\n        <div role=\"alert\" aria-label=\"Removing cat from favorites\" />\n      )}\n\n      <Tiles columns=\"5-col\" space=\"small\">\n        {kitties.map((kitty) => (\n          <Kitty\n            isFaved\n            key={kitty.id}\n            kitty={kitty}\n            onToggleFav={() => onKittyUnfaved(kitty.id)}\n          />\n        ))}\n      </Tiles>\n    </Stack>\n  );\n};\n\nconst AllKitties = () => {\n  const queries = useQueryClient();\n  const { showNotification } = useNotification();\n  const { mutateAsync: doFavKitty, isLoading: isAdding } = useMutation(\n    (id) => favKitty(id),\n    {\n      onSuccess: () => {\n        queries.invalidateQueries([\"fav-kitties\"]);\n      },\n    }\n  );\n\n  const onKittyFaved = async (id) => {\n    await doFavKitty(id);\n    showNotification(\"Cat added to favorites 😻\");\n  };\n\n  const { data: kitties = [], isLoading, error, refetch } = useQuery(\n    [\"kitties\"],\n    () => getKitties(),\n    {\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  if (isLoading) {\n    return (\n      <Spacing py=\"large\">\n        <Loading size=\"large\" />\n      </Spacing>\n    );\n  }\n\n  if (error) {\n    return (\n      <>\n        <Text>Bad Kitty!!!!</Text>\n        <Text>{error}</Text>\n      </>\n    );\n  }\n\n  if (kitties.length <= 0) {\n    return (\n      <Text>\n        No kitties{\" \"}\n        <span role=\"img\" aria-label=\"Sad\">\n          😿 😿 😿\n        </span>{\" \"}\n      </Text>\n    );\n  }\n\n  return (\n    <Stack space=\"small\">\n      {isAdding && <div role=\"alert\" aria-label=\"Adding cat to favorites\" />}\n      <Tiles columns=\"5-col\">\n        {kitties.map((kitty) => (\n          <Fragment key={kitty.id}>\n            <span role=\"alert\" aria-label=\"New kitten displayed\">\n              <Kitty kitty={kitty} onToggleFav={() => onKittyFaved(kitty.id)} />\n            </span>\n          </Fragment>\n        ))}\n      </Tiles>\n      <Inline>\n        <Column width=\"content\">\n          <Button onClick={refetch}>Show another cat</Button>\n        </Column>\n      </Inline>\n    </Stack>\n  );\n};\n\nconst Main = () => {\n  const { showNotification } = useNotification();\n\n  const { mutateAsync: doAddKitty, error } = useMutation((data) =>\n    addKitty(data)\n  );\n  const kittyForm = useForm({\n    defaultValues: {\n      name: \"\",\n      age: \"\",\n    },\n  });\n  const [modal, setModal] = useState(false);\n\n  const onSubmitKitten = async (data) => {\n    try {\n      await doAddKitty({\n        ...data,\n        image: data.image?.[0],\n      });\n      setModal(false);\n      showNotification(\"New kitten added to the repository! Nice!\");\n    } catch {\n      showNotification(\"Wah! Something went wrong\");\n    }\n  };\n\n  useEffect(() => {\n    const handleEscape = (event) => {\n      if (modal && event.key === \"Escape\") {\n        setModal(false);\n      }\n    };\n    window.addEventListener(\"keypress\", handleEscape);\n    return () => {\n      window.removeEventListener(\"keypress\", handleEscape);\n    };\n  }, [modal]);\n\n  return (\n    <main aria-label=\"Browse and favorite kittens\">\n      <FocusTrap active={modal}>\n        <aside>\n          <Modal render={modal} onBackgroundClick={() => setModal(false)}>\n            <Card bordered>\n              <Card.Header>New Kitty</Card.Header>\n              <Card.Body>\n                <form onSubmit={kittyForm.handleSubmit(onSubmitKitten)}>\n                  <Stack space=\"small\">\n                    <Text as=\"label\" htmlFor=\"name\">\n                      Name\n                    </Text>\n                    <Input\n                      name=\"name\"\n                      type=\"text\"\n                      ref={kittyForm.register({ required: true })}\n                    />\n                    {kittyForm.errors?.name && (\n                      <Text color=\"cornershop\" size=\"xs\">\n                        {kittyForm.errors?.name?.message}\n                      </Text>\n                    )}\n                    <Text as=\"label\" htmlFor=\"age\">\n                      Age\n                    </Text>\n                    <Input\n                      name=\"age\"\n                      type=\"number\"\n                      ref={kittyForm.register({ required: true })}\n                    />\n                    {kittyForm.errors?.age && (\n                      <Text color=\"cornershop\" size=\"xs\">\n                        {kittyForm.errors?.age?.message}\n                      </Text>\n                    )}\n                    <Text as=\"label\" htmlFor=\"image\">\n                      Image:\n                    </Text>\n                    <Input\n                      name=\"image\"\n                      type=\"file\"\n                      ref={kittyForm.register({ required: true })}\n                    />\n                    {kittyForm.errors?.file && (\n                      <Text color=\"cornershop\" size=\"xs\">\n                        {kittyForm.errors?.file?.message}\n                      </Text>\n                    )}\n                    {error && (\n                      <Text\n                        size=\"sm\"\n                        color=\"cornershop\"\n                        weight=\"medium\"\n                        role=\"alert\"\n                      >\n                        <span role=\"img\" aria-label=\"Error\">\n                          🚨\n                        </span>{\" \"}\n                        Could not upload kitten\n                      </Text>\n                    )}\n                    <Inline align=\"right\">\n                      <Column width=\"content\">\n                        <Button type=\"submit\" aria-label=\"Submit the cat\">\n                          Send\n                        </Button>\n                      </Column>\n                    </Inline>\n                  </Stack>\n                </form>\n              </Card.Body>\n            </Card>\n          </Modal>\n        </aside>\n      </FocusTrap>\n      <Header appName=\"Cat browser 🐈\" />\n      <Spacing p=\"xxlarge\">\n        <Stack space=\"large\">\n          <Cell as=\"section\">\n            <Spacing p=\"large\">\n              <Spacing pb=\"small\">\n                <Text\n                  as=\"h1\"\n                  tabIndex=\"0\"\n                  color=\"black\"\n                  size=\"lg\"\n                  weight=\"medium\"\n                  aria-label=\"Favorite Kitties. A list with the cats you have favorited  before\"\n                >\n                  Favorite Kitties\n                </Text>\n              </Spacing>\n              <FavKitties />\n            </Spacing>\n          </Cell>\n          <Cell as=\"section\" tabIndex=\"0\">\n            <Spacing p=\"large\">\n              <Spacing pb=\"small\">\n                <Inline>\n                  <Column width=\"fluid\">\n                    <Text\n                      as=\"h1\"\n                      tabIndex=\"0\"\n                      color=\"black\"\n                      size=\"lg\"\n                      weight=\"medium\"\n                      aria-label=\"A random kitty is shown and you can add it to your favorites\"\n                    >\n                      Random Kitty\n                    </Text>\n                  </Column>\n                  <Column width=\"content\">\n                    <Button\n                      variant=\"secondary\"\n                      size=\"small\"\n                      onClick={() => setModal(true)}\n                      aria-label=\"Add new cat. Upload a new picture to make it available for everyone\"\n                    >\n                      Add new cat\n                    </Button>\n                  </Column>\n                </Inline>\n              </Spacing>\n              <AllKitties />\n            </Spacing>\n          </Cell>\n        </Stack>\n      </Spacing>\n    </main>\n  );\n};\n\nexport default Main;\n","import { CornponentsTheme, Normalize } from \"@cornershop/cornponents\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { NotificationProvider } from \"./components/Notification\";\nimport MainPage from \"./pages/Main\";\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    <CornponentsTheme>\n      <Normalize />\n      <QueryClientProvider client={queryClient}>\n        <NotificationProvider>\n          <MainPage />\n        </NotificationProvider>\n      </QueryClientProvider>\n    </CornponentsTheme>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}